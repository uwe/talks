HTTP requests in Perl?

* LWP::UserAgent or LWP::Simple


parallel requests with

* LWP::Parallel::UserAgent (very old - 2004)
* HTTP::Async
* AnyEvent::HTTP, POE::Component::Client::HTTP
* WWW::Curl::Multi


some alternatives

* HTTP::Lite
* HTTP::Client (only GET!)


if you don't mind installing Mojolicious you get a powerful HTTP client

* asynchronous
* HTTP 1.1
* WebSocket support


synopsis

use Mojo::UserAgent;
my $ua = Mojo::UserAgent->new;

my $tx = $ua->get('http://www.perlworkshop.de/');
say $tx->res->body;


HTTP request methods

* get
* post, post_form
* put
* delete
* head


transaction object

* req(uest) and res(ponse)
###


response object

###


synopsis (non-blocking)

$ua->get('http://kraih.com' => sub {
    my ($ua, $tx) = @_;
    say $tx->res->body;
    Mojo::IOLoop->stop;
});
Mojo::IOLoop->start;


Mojo::IOLoop

###


parallel requests

my $delay = Mojo::IOLoop->delay;
foreach my $url ('mojolicio.us', 'cpan.org') {
    $delay->begin;
    $ua->get($url => sub {
        my ($ua, $tx) = @_;
        $delay->end($tx->res->dom->at('title')->text);
    });
  }
my @titles = $delay->wait;


Mojo::IOLoop::Delay

###


Mojo::UserAgent::Queue???

###


Part 2 content processing

Mojo::DOM


Mojo::JSON::Pointer


Part 3 command line

mojo URL selector


